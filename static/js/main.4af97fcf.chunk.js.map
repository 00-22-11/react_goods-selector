{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","reset","setState","add","good","prev","remove","includes","newArray","splice","indexOf","this","className","length","map","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOmBC,E,4MACnBC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,MAAQ,WACN,EAAKC,SAAS,CACZF,cAAe,M,EAInBG,IAAM,SAACC,GACL,EAAKF,UAAS,SAACG,GAAD,MAAW,CACvBL,cAAc,GAAD,mBAAMK,EAAKL,eAAX,CAA0BI,S,EAI3CE,OAAS,SAACF,GACJ,EAAKL,MAAMC,cAAcO,SAASH,IACpC,EAAKF,UAAS,SAACG,GACb,IAAMG,EAAQ,YAAOH,EAAKL,eAI1B,OAFAQ,EAASC,OAAOJ,EAAKL,cAAcU,QAAQN,GAAO,GAE3C,CACLJ,cAAeQ,O,4CAMvB,WAAU,IAAD,OACCR,EAAkBW,KAAKZ,MAAvBC,cAER,OACE,sBAAKY,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,SACuC,IAApCD,KAAKZ,MAAMC,cAAca,OAAzB,UAA2CF,KAAKZ,MAAMC,cAAcW,KAAKZ,MAAMC,cAAca,OAAS,GAAtG,gBAAyH,sBAG5H,+BACGhB,EAAgBiB,KAAI,SAAAV,GACnB,OACE,qBAEEQ,UAAWZ,EAAcO,SAASH,GAC9B,sBACA,YAJN,UAMGA,EACAJ,EAAcO,SAASH,GACpB,wBAAQW,KAAK,SAASH,UAAU,qCAAqCI,QAAS,kBAAM,EAAKV,OAAOF,IAAhG,oBACA,wBAAQW,KAAK,SAASH,UAAU,sCAAsCI,QAAS,kBAAM,EAAKb,IAAIC,IAA9F,mBARCA,MAYe,IAAzBJ,EAAca,QACb,wBACEE,KAAK,SACLH,UAAU,oCACVI,QAASL,KAAKV,MAHhB,6B,GAzDqBgB,IAAMC,WCjBvCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4af97fcf.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nexport default class App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  reset = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  add = (good: string) => {\n    this.setState((prev) => ({\n      selectedGoods: [...prev.selectedGoods, good],\n    }));\n  };\n\n  remove = (good: string) => {\n    if (this.state.selectedGoods.includes(good)) {\n      this.setState((prev) => {\n        const newArray = [...prev.selectedGoods];\n\n        newArray.splice(prev.selectedGoods.indexOf(good), 1);\n\n        return {\n          selectedGoods: newArray,\n        };\n      });\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {this.state.selectedGoods.length !== 0 ? `${this.state.selectedGoods[this.state.selectedGoods.length - 1]} is selected` : 'No selected goods'}\n        </h1>\n\n        <ul>\n          {goodsFromServer.map(good => {\n            return (\n              <li\n                key={good}\n                className={selectedGoods.includes(good)\n                  ? 'App__good--isactive'\n                  : 'App__good'}\n              >\n                {good}\n                {selectedGoods.includes(good)\n                  ? <button type=\"button\" className=\"btn btn-outline-danger App__button\" onClick={() => this.remove(good)}>Remove</button>\n                  : <button type=\"button\" className=\"btn btn-outline-success App__button\" onClick={() => this.add(good)}>Add</button>}\n              </li>\n            );\n          })}\n          {selectedGoods.length !== 0 && (\n            <button\n              type=\"button\"\n              className=\"App__reset btn btn-outline-danger\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}